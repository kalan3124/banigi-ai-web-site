import React, { useState } from "react";
import { Swiper, SwiperSlide } from "swiper/react";
import { Pagination } from "swiper/modules";
import ReactCompareImage from "react-compare-image";

import "swiper/css/pagination";
import "swiper/css";

import t1 from "../../../assets/t1.png";
import t2 from "../../../assets/t2.png";
import t3 from "../../../assets/t3.png";
import t4 from "../../../assets/t4.png";
import viewIcon from "../../../assets/view.png";
import downloadIcon from "../../../assets/down.png";

import TryDesignForm from "../../../Components/TryDesignForm";
import InteriorDesignForm from "../../../Components/InteriorDesignForm";
import ExteriorDesignForm from "../../../Components/ExteriorDesignForm";
import LandscapeDesignForm from "../../../Components/LandscapeDesignForm";
import CustomDesignForm from "../../../Components/CustomDesignForm";
import { useEffect } from "react";
import { PhotoProvider, PhotoView } from "react-photo-view";
import "react-photo-view/dist/react-photo-view.css";
import { t } from "i18next";

const TryBanigiAi = (props) => {
  const [activeTab, setActiveTab] = useState(0);
  const [selectedImage, setSelectedImage] = useState("");
  const [generatedImages, setGeneratedImages] = useState([]);

  const selectImage = (path) => {
    setSelectedImage(path);
  };

  const generatedImagesArr = (images) => {
    setGeneratedImages(images);
  };

  const tabs = [
    {
      title: t("interior_design"),
      icon: (
        <svg
          width="27"
          height="22"
          viewBox="0 0 31 22"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M6.82262 0.0673828C4.07838 0.0673828 1.81286 2.20728 1.81286 4.86738V5.11582C0.961287 5.48186 0.310674 6.2344 0.0960608 7.15371C-0.250331 8.63816 0.56692 9.98934 1.81286 10.5533V15.0674C1.81286 16.4882 2.52715 17.7461 3.61286 18.5068V21.0674C3.61287 21.2265 3.67609 21.3791 3.78861 21.4916C3.90113 21.6041 4.05373 21.6674 4.21286 21.6674H6.61286C6.77198 21.6674 6.92459 21.6041 7.0371 21.4916C7.14962 21.3791 7.21284 21.2265 7.21286 21.0674V19.2674H22.8129V21.0674C22.8129 21.2265 22.8761 21.3791 22.9886 21.4916C23.1011 21.6041 23.2537 21.6674 23.4129 21.6674H25.8129C25.972 21.6674 26.1246 21.6041 26.2371 21.4916C26.3496 21.3791 26.4128 21.2265 26.4129 21.0674V18.5068C27.4986 17.7461 28.2129 16.4882 28.2129 15.0674V10.5639C29.2599 10.0964 30.0129 9.08469 30.0129 7.86738C30.0129 6.64507 29.2674 5.58927 28.2129 5.12285V4.86738C28.2129 2.20728 25.9473 0.0673828 23.2031 0.0673828H6.82262ZM6.82262 1.26738H23.2031C25.3296 1.26738 27.0129 2.88829 27.0129 4.86738C26.916 4.86734 26.8185 4.87203 26.7199 4.88145C25.1454 5.03132 24.0129 6.42472 24.0129 7.97051V10.8674H16.8129C16.0946 10.8674 15.9375 10.869 15.1629 10.869C14.3883 10.869 13.9311 10.8674 13.2129 10.8674H6.01286V7.86738C6.01286 6.21888 4.64793 4.87744 3.01286 4.86973V4.86738C3.01286 2.88829 4.69607 1.26738 6.82262 1.26738ZM3.0234 6.06621C4.03401 6.06441 4.81286 6.86888 4.81286 7.86738V13.8674C4.81286 14.8544 5.62588 15.6674 6.61286 15.6674H23.4129C24.3998 15.6674 25.2129 14.8544 25.2129 13.8674V7.97051C25.2129 7.0095 25.912 6.16331 26.8336 6.07559C27.9242 5.97137 28.8129 6.80721 28.8129 7.86738C28.8129 8.71004 28.2383 9.40017 27.4617 9.60176C27.3331 9.63526 27.2192 9.71051 27.138 9.81571C27.0567 9.92091 27.0127 10.0501 27.0129 10.183V15.0674C27.0129 16.7316 25.6771 18.0674 24.0129 18.0674H6.01286C4.34866 18.0674 3.01286 16.7316 3.01286 15.0674V10.1889C3.01266 10.056 2.96836 9.92696 2.88692 9.82198C2.80548 9.717 2.6915 9.64202 2.56286 9.60879C1.65742 9.37513 1.01845 8.47969 1.26442 7.42559C1.41155 6.79536 1.94717 6.26276 2.57809 6.11777C2.73035 6.0828 2.87903 6.06647 3.0234 6.06621ZM6.01286 12.0674H13.2129C13.8829 12.0674 14.4129 12.5974 14.4129 13.2674V14.4674H6.61286C6.27384 14.4674 6.01286 14.2064 6.01286 13.8674V12.0674ZM16.8129 12.0674H24.0129V13.8674C24.0129 14.2064 23.7519 14.4674 23.4129 14.4674H15.6129V13.2674C15.6129 12.5974 16.1429 12.0674 16.8129 12.0674ZM4.81286 19.0893C5.19347 19.2033 5.59606 19.2674 6.01286 19.2674V20.4674H4.81286V19.0893ZM25.2129 19.0893V20.4674H24.0129V19.2674C24.4297 19.2674 24.8322 19.2033 25.2129 19.0893Z"
            fill="white"
          />
        </svg>
      ),
      content: (
        <InteriorDesignForm
          manageLoader={props.manageLoader}
          selectImage={selectImage}
          generatedImagesArr={generatedImagesArr}
          openLogin={props.openLogin}
        />
      ),
    },
    // {
    //   title: t("exterior_design"),
    //   icon: (
    //     <svg
    //       width="20"
    //       height="27"
    //       viewBox="0 0 25 27"
    //       fill="none"
    //       xmlns="http://www.w3.org/2000/svg"
    //     >
    //       <path
    //         d="M12.4526 1.9519C12.3751 1.96036 12.3007 1.98694 12.2354 2.02949L0.317423 9.8972C0.249296 9.94354 0.193769 10.0061 0.155843 10.0792C0.117917 10.1524 0.0987839 10.2338 0.100168 10.3162V13.4974C0.0986342 13.5884 0.122127 13.6781 0.168082 13.7566C0.214037 13.8351 0.280687 13.8995 0.360755 13.9428C0.440823 13.986 0.531232 14.0064 0.622109 14.0018C0.712987 13.9971 0.80084 13.9676 0.876076 13.9164L1.58991 13.4509V26.2844C1.58992 26.4161 1.64225 26.5424 1.73537 26.6355C1.8285 26.7286 1.9548 26.7809 2.08649 26.781H22.9429C23.0746 26.7809 23.2009 26.7286 23.294 26.6355C23.3871 26.5424 23.4395 26.4161 23.4395 26.2844V13.4509L24.1533 13.9164C24.2286 13.9676 24.3164 13.9971 24.4073 14.0018C24.4982 14.0064 24.5886 13.986 24.6686 13.9428C24.7487 13.8995 24.8154 13.8351 24.8613 13.7566C24.9073 13.6781 24.9308 13.5884 24.9292 13.4974V10.3162C24.9306 10.2338 24.9115 10.1524 24.8736 10.0792C24.8356 10.0061 24.7801 9.94354 24.712 9.8972L12.794 2.02949C12.6934 1.96305 12.5721 1.93547 12.4526 1.9519ZM12.5147 3.05369L23.9361 10.5955V12.5818L12.794 5.21072C12.7116 5.15468 12.6143 5.12472 12.5147 5.12472C12.4151 5.12472 12.3177 5.15468 12.2354 5.21072L1.09333 12.5818V10.5955L12.5147 3.05369ZM12.5147 6.23492L22.4463 12.7836V25.7878H2.58307V12.7836L12.5147 6.23492Z"
    //         fill="white"
    //       />
    //       <path
    //         fillRule="evenodd"
    //         clipRule="evenodd"
    //         d="M16.9839 4.81556L17.8868 5.42709V2.87109H16.9839V4.81556Z"
    //         fill="white"
    //       />
    //       <path
    //         fillRule="evenodd"
    //         clipRule="evenodd"
    //         d="M18.9702 6.11002L19.8731 6.71765V2.84082H18.9702V6.11002Z"
    //         fill="white"
    //       />
    //       <rect
    //         x="16.107"
    //         y="1.21932"
    //         width="4.61812"
    //         height="1.3853"
    //         rx="0.692651"
    //         stroke="white"
    //         strokeOpacity="0.6"
    //         strokeWidth="0.530442"
    //       />
    //     </svg>
    //   ),
    //   content: (
    //     <ExteriorDesignForm
    //       manageLoader={props.manageLoader}
    //       selectImage={selectImage}
    //       generatedImagesArr={generatedImagesArr}
    //       openLogin={props.openLogin}
    //     />
    //   ),
    // },
    {
      title: t("landscape_design"),
      icon: (
        <svg
          width="25"
          height="27"
          viewBox="0 0 30 27"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M13.7983 23.6891V24.4512H14.5128H15.2272V24.1845C15.2272 24.0416 15.2558 23.6986 15.2843 23.4224L15.351 22.9271H14.5699H13.7983V23.6891Z"
            fill="white"
          />
          <path
            d="M10.6916 23.1749C10.7202 23.2607 10.7488 23.6036 10.7488 23.9465V24.5752L11.4822 24.5085C11.8823 24.4799 12.2252 24.4323 12.2443 24.4133C12.2729 24.3942 12.2538 24.0703 12.2157 23.6988L12.149 23.0225H11.3965C10.7392 23.0225 10.644 23.0416 10.6916 23.1749Z"
            fill="white"
          />
          <path
            d="M7.91103 23.2794L7.59668 23.3175L7.65383 23.7652C7.68241 24.0128 7.73004 24.3462 7.75862 24.5082L7.79672 24.7939L8.47304 24.7273C8.84454 24.6796 9.17794 24.632 9.19699 24.6034C9.22557 24.5749 9.21605 24.251 9.17794 23.889L9.11126 23.2127L8.66356 23.2317C8.42541 23.2317 8.08249 23.2603 7.91103 23.2794Z"
            fill="white"
          />
          <path
            d="M17.2258 23.9662C17.1973 24.271 17.1496 24.6139 17.1306 24.7187C17.0925 24.8997 17.1401 24.9283 17.5878 24.9854C18.5975 25.0997 18.5785 25.1092 18.6452 24.4901C18.6833 24.1948 18.7309 23.8804 18.7595 23.7852C18.7976 23.6613 18.7118 23.6232 18.3022 23.5661C18.026 23.5375 17.6831 23.4899 17.5402 23.4613C17.2925 23.4137 17.283 23.4232 17.2258 23.9662Z"
            fill="white"
          />
          <path
            d="M5.19776 23.622C4.55001 23.7173 4.54048 23.7268 4.59764 23.9745C4.62621 24.1174 4.67384 24.4603 4.71195 24.727C4.7691 25.1747 4.79768 25.2223 4.97866 25.1747C5.08345 25.1557 5.42637 25.0985 5.73119 25.0604C6.23605 25.0033 6.28368 24.9842 6.24558 24.7937C6.217 24.6889 6.15985 24.346 6.13127 24.0412C6.09317 23.7268 6.01696 23.5077 5.95028 23.5173C5.89313 23.5173 5.55021 23.5744 5.19776 23.622Z"
            fill="white"
          />
          <path
            d="M20.7375 23.535C20.6613 23.7731 20.5089 24.8114 20.547 24.8495C20.6232 24.9352 21.8711 25.1257 21.9283 25.0686C21.9854 25.0019 22.2045 23.9731 22.2045 23.7636C22.2045 23.6969 22.0235 23.6207 21.8044 23.5921C21.5758 23.554 21.2519 23.5064 21.09 23.4683C20.8709 23.4207 20.7661 23.4397 20.7375 23.535Z"
            fill="white"
          />
          <path
            d="M2.10992 24.2029C1.8432 24.26 1.59553 24.3267 1.56695 24.3553C1.53837 24.3839 1.59553 24.7077 1.69079 25.0697C1.8813 25.8127 1.82415 25.7841 2.80529 25.5936L3.2911 25.4888L3.14821 24.7839C2.98628 23.9838 3.02438 24.0028 2.10992 24.2029Z"
            fill="white"
          />
          <path
            d="M27.3847 19.6542C27.2955 19.6907 27.1382 19.7444 27.0387 19.7838C26.9428 19.82 26.8638 19.8536 26.8635 19.8603C26.8664 19.8705 26.9288 20.0586 27.0065 20.2844C27.4164 21.529 27.4892 22.7789 27.1957 23.551C27.0773 23.8658 27.0416 23.9114 26.7326 24.1943C26.4236 24.4771 26.375 24.5087 26.0407 24.6017C25.5663 24.7391 24.7086 24.7045 24.0022 24.5251L23.476 24.3872L23.3602 24.7191C23.2823 24.9582 23.2708 25.0655 23.3199 25.098C23.4739 25.1958 24.4022 25.3851 24.9093 25.4244C25.5508 25.4696 26.1135 25.3934 26.5736 25.1981C27.0303 25.006 27.5075 24.5756 27.7315 24.1576C28.0914 23.4861 28.2109 22.4604 28.0476 21.4289C27.9765 20.9776 27.6458 19.6927 27.5816 19.6225C27.5687 19.6085 27.4772 19.6213 27.3847 19.6542Z"
            fill="white"
          />
          <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M1.8414 9.52448L1.84141 9.52446C2.01204 8.84179 2.45528 7.06854 3.07452 5.39771C3.41654 4.47486 3.79885 3.62109 4.19884 3.00958C4.399 2.70359 4.58563 2.48639 4.75043 2.35165C4.90237 2.22742 4.99946 2.20184 5.04949 2.19878C5.09936 2.2017 5.19659 2.22703 5.34906 2.35168C5.51386 2.48642 5.70049 2.70362 5.90065 3.00961C6.30064 3.62112 6.68295 4.47489 7.02497 5.39775C7.64421 7.06855 8.08743 8.84178 8.25808 9.52447L8.25808 9.52449C8.27515 9.59278 8.28949 9.65015 8.30101 9.69542C9.01956 12.5198 8.80727 14.1966 8.16794 15.2779C7.6665 16.1261 6.84431 16.71 5.73765 17.1854V9.93099H4.40445V17.2036C3.27627 16.7248 2.43941 16.1369 1.93155 15.2779C1.29223 14.1966 1.07993 12.5198 1.79848 9.69539C1.81 9.65013 1.82434 9.59276 1.8414 9.52448ZM5.73765 18.6226V21.5299H4.40445V18.6387C2.92258 18.083 1.58603 17.3131 0.783928 15.9564C-0.117051 14.4325 -0.248802 12.3353 0.506439 9.36668C0.517317 9.32392 0.531133 9.26859 0.547784 9.20189L0.547819 9.20175C0.716741 8.52518 1.17738 6.68023 1.82441 4.9344C2.17842 3.97923 2.60164 3.01589 3.08313 2.27978C3.32372 1.91197 3.59683 1.57274 3.90657 1.31951C4.21235 1.0695 4.59429 0.871537 5.03906 0.865382V0.865265C5.04188 0.865265 5.0447 0.865273 5.04751 0.865288C5.05181 0.865252 5.05612 0.865234 5.06043 0.865234V0.865413C5.5052 0.871568 5.88714 1.06953 6.19292 1.31954C6.50266 1.57277 6.77577 1.912 7.01636 2.27981C7.49786 3.01592 7.92108 3.97926 8.27508 4.93443C8.92212 6.68026 9.38275 8.52522 9.55167 9.20179L9.55177 9.20218C9.56839 9.26876 9.58219 9.32401 9.59305 9.36671C10.3483 12.3353 10.2165 14.4326 9.31556 15.9565C8.52116 17.3001 7.2025 18.0682 5.73765 18.6226Z"
            fill="white"
          />
          <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M16.8057 11.4784C16.7953 11.4376 16.7824 11.386 16.7671 11.3246C16.6135 10.7102 16.2146 9.11423 15.6573 7.61048C15.3495 6.77992 15.0054 6.01152 14.6454 5.46116C14.4652 5.18577 14.2973 4.99029 14.149 4.86902C14.0118 4.75691 13.9243 4.73407 13.8794 4.73142C13.8347 4.73392 13.747 4.7565 13.6094 4.86905C13.4611 4.99032 13.2931 5.1858 13.1129 5.46119C12.7529 6.01155 12.4089 6.77995 12.101 7.61051C11.5437 9.11426 11.1448 10.7102 10.9912 11.3246L10.9912 11.3247C10.9759 11.3861 10.963 11.4377 10.9526 11.4784C10.3059 14.0204 10.497 15.5295 11.0724 16.5027C11.5295 17.2758 12.2826 17.8049 13.298 18.2358V11.6905H14.4979V18.2198C15.4943 17.7918 16.2345 17.2662 16.6859 16.5027C17.2613 15.5294 17.4524 14.0203 16.8057 11.4784ZM14.4979 19.5132V22.1294H13.298V19.5274C11.9643 19.0273 10.7614 18.3343 10.0395 17.1133C9.22864 15.7418 9.11006 13.8543 9.78978 11.1826C9.79956 11.1441 9.81199 11.0944 9.82696 11.0344L9.82702 11.0341C9.97905 10.4252 10.3936 8.76477 10.976 7.19353C11.2946 6.33388 11.6755 5.46687 12.1088 4.80437C12.3253 4.47334 12.5711 4.16804 12.8499 3.94012C13.1253 3.71497 13.4693 3.53671 13.87 3.5314V3.53125C13.8738 3.53125 13.8777 3.53127 13.8815 3.5313C13.8838 3.53129 13.8861 3.53128 13.8884 3.53128V3.53137C14.289 3.53668 14.633 3.71494 14.9084 3.94009C15.1872 4.16801 15.433 4.47331 15.6495 4.80434C16.0829 5.46684 16.4638 6.33385 16.7824 7.1935C17.3647 8.76475 17.7793 10.4252 17.9313 11.0341L17.9315 11.035C17.9464 11.0947 17.9588 11.1442 17.9685 11.1826C18.6483 13.8543 18.5297 15.7418 17.7188 17.1133C17.0037 18.3228 15.8166 19.0142 14.4979 19.5132Z"
            fill="white"
          />
          <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M22.2028 11.7493C22.2111 11.7167 22.2214 11.6754 22.2337 11.6262C22.3566 11.1347 22.6757 9.85798 23.1216 8.65499C23.3678 7.99053 23.6431 7.37582 23.9311 6.93553C24.0752 6.71522 24.2096 6.55883 24.3282 6.46182C24.4381 6.37199 24.5081 6.3538 24.544 6.35172C24.5799 6.3538 24.6499 6.37199 24.7598 6.46182C24.8784 6.55883 25.0128 6.71522 25.1569 6.93553C25.4449 7.37582 25.7202 7.99053 25.9664 8.65499C26.4123 9.85798 26.7314 11.1347 26.8543 11.6262L26.8543 11.6265C26.8666 11.6755 26.8769 11.7168 26.8852 11.7493C27.4025 13.7829 27.2497 14.9902 26.7894 15.7687C26.4283 16.3795 25.8361 16.8 25.039 17.1424V11.9189H24.0791V17.1552C23.2668 16.8105 22.6643 16.3872 22.2986 15.7687C21.8383 14.9902 21.6855 13.7829 22.2028 11.7493ZM25.039 18.1771V20.2701H24.0791V18.1885C23.0122 17.7884 22.0498 17.234 21.4723 16.2573C20.8236 15.16 20.7288 13.65 21.2725 11.5126C21.2804 11.4818 21.2903 11.442 21.3023 11.3939C21.424 10.9068 21.7556 9.5784 22.2215 8.3214C22.4764 7.63368 22.7811 6.94007 23.1278 6.41007C23.301 6.14525 23.4976 5.90101 23.7206 5.71868C23.9409 5.53857 24.2161 5.39598 24.5366 5.3917V5.3916C24.5391 5.3916 24.5415 5.39161 24.544 5.39163C24.5465 5.39161 24.5489 5.3916 24.5514 5.3916V5.3917C24.8719 5.39598 25.1471 5.53857 25.3674 5.71868C25.5904 5.90101 25.787 6.14525 25.9602 6.41007C26.3069 6.94007 26.6116 7.63368 26.8665 8.3214C27.3324 9.57839 27.664 10.9068 27.7857 11.3939L27.7857 11.3939C27.7977 11.442 27.8076 11.4818 27.8155 11.5126C28.3592 13.65 28.2644 15.16 27.6157 16.2573C27.0436 17.2248 26.0939 17.7779 25.039 18.1771Z"
            fill="white"
          />
        </svg>
      ),

      content: (
        <LandscapeDesignForm
          manageLoader={props.manageLoader}
          selectImage={selectImage}
          generatedImagesArr={generatedImagesArr}
          openLogin={props.openLogin}
        />
      ),
    },
    {
      title: t("custom_design"),
      icon: (
        <svg
          width="27"
          height="24"
          viewBox="0 0 27 24"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M23.146 23.0945H2.75421C1.59626 23.0945 0.654297 22.1707 0.654297 21.0352V8.04658C0.654297 6.91109 1.59626 5.9873 2.75421 5.9873H14.5539V7.0565H2.75421C2.18646 7.0565 1.7235 7.50129 1.7235 8.04658V21.0352C1.7235 21.5816 2.18646 22.0253 2.75421 22.0253H23.146C23.7137 22.0253 24.1767 21.5816 24.1767 21.0352V9.1949H25.2459V21.0352C25.2459 22.1707 24.3039 23.0945 23.146 23.0945Z"
            fill="white"
          />
          <path
            d="M9.41965 18.8178H4.93115V17.7486H6.28369C6.9188 17.7486 7.13477 17.2033 7.51006 15.8657C8.02969 14.0128 8.74178 11.4756 12.5556 11.4756L12.9341 11.6317L15.2864 13.9839L15.4403 14.3058C15.4467 14.3678 15.5889 15.839 14.4545 17.0996C13.4281 18.2404 11.7345 18.8178 9.41965 18.8178ZM7.96768 17.7486H9.41965C11.4073 17.7486 12.8293 17.2942 13.6451 16.3993C14.276 15.7075 14.3711 14.9312 14.3797 14.5912L12.3375 12.548C9.52657 12.6357 9.02512 14.4234 8.5397 16.1555C8.38681 16.6986 8.22643 17.2728 7.96768 17.7486Z"
            fill="white"
          />
          <path
            d="M15.094 14.9764L14.3327 14.2247L24.9456 3.47285C25.3508 3.06763 25.3508 2.41114 24.9477 2.00805C24.5446 1.60496 23.8892 1.60496 23.4861 2.00805L12.7321 12.6231L11.9805 11.8629L22.7313 1.25106C23.5492 0.434188 24.8836 0.434188 25.7026 1.25319C26.5216 2.0722 26.5227 3.40763 25.7026 4.22664L15.094 14.9764Z"
            fill="white"
          />
        </svg>
      ),

      content: (
        <CustomDesignForm
          manageLoader={props.manageLoader}
          selectImage={selectImage}
          generatedImagesArr={generatedImagesArr}
          openLogin={props.openLogin}
        />
      ),
    },
  ];
  const handleTabClick = (index) => {
    setGeneratedImages([]);
    setActiveTab(index);
  };
  const renderTabs = () => {
    return tabs.map((tab, index) => (
      <button
        key={index}
        onClick={() => handleTabClick(index)}
        className={activeTab === index ? "active" : ""}
        style={{ display: "flex", alignItems: "center", gap: "10px" }}
      >
        {tab.icon}
        {tab.title}
      </button>
    ));
  };
  return (
    <>
      <div className="TryDesignDiv">
        <h3>
          {t("design_your_home_by")}
          <span> AI {t("technology")}</span>
        </h3>

        <div className="tabs-container">
          <div className="tab-heading">{renderTabs()}</div>

          <div className="tab_content_div">
            <div className="tab-content">{tabs[activeTab]?.content}</div>
            {parseInt(generatedImages.length) > 0 ? (
              (console.log(generatedImages.length),
              (
                <div className="swiper-div">
                  {Object.values(generatedImages).map((e) => {
                    return [
                      <div className="swiper-div">
                        <div className="container">
                          <img src={e} alt="Avatar" className="image" />
                          <div className="overlay">
                            <div className="floating-buttons">
                              <PhotoProvider>
                                <PhotoView src={e}>
                                  <img
                                    style={{
                                      width: "12%",
                                      margin: "10px",
                                      cursor: "pointer",
                                    }}
                                    src={viewIcon}
                                    alt=""
                                  />
                                </PhotoView>
                              </PhotoProvider>
                              <img
                                style={{
                                  width: "12%",
                                  cursor: "pointer",
                                  margin: "10px",
                                }}
                                src={downloadIcon}
                                alt=""
                                onClick={() => {
                                  // alert();
                                  window.location.href = e;
                                }}
                              />
                            </div>
                          </div>
                        </div>
                      </div>,
                      // <ReactCompareImage
                      //   key={"design_" + key}
                      //   leftImageCss={{
                      //     borderTopLeftRadius: "10px",
                      //     borderBottomLeftRadius: "10px",
                      //     borderTopRightRadius: "10px",
                      //     borderBottomRightRadius: "10px",
                      //   }}
                      //   rightImageCss={{
                      //     borderTopRightRadius: "10px",
                      //     borderBottomRightRadius: "10px",
                      //   }}
                      //   leftImage={selectedImage}
                      //   rightImage={e}
                      // />,
                      <br />,
                    ];
                  })}
                </div>
              ))
            ) : (
              <div className="swiper-div">
                <Swiper
                  modules={[Pagination]}
                  spaceBetween={50}
                  slidesPerView={1}
                  pagination={{
                    clickable: true,
                  }}
                  className="mySwiper"
                >
                  <SwiperSlide style={{ maxHeight: "1168px" }}>
                    <img src={t1} alt="" />
                  </SwiperSlide>
                  <SwiperSlide style={{ maxHeight: "1168px" }}>
                    <img src={t2} alt="" />
                  </SwiperSlide >
                  <SwiperSlide style={{ maxHeight: "1168px" }}>
                    <img src={t3} alt="" />
                  </SwiperSlide>
                  <SwiperSlide style={{ maxHeight: "1168px" }}>
                    <img src={t4} alt="" />
                  </SwiperSlide>
                </Swiper>
              </div>
            )}
          </div>
        </div>
      </div>
    </>
  );
};

export default TryBanigiAi;
